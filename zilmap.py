# This script takes the output generated by zil-to-json and generates a graph in the dot language.
# see https://github.com/zork-playground/zil-to-json
#
import json
from graphviz import Digraph

f = open("zork1.rooms.json")
rooms = json.load(f)
f.close()

f = open("zork1.objects.json")
objects = json.load(f)
f.close()

dot = Digraph(comment = 'zork1', format='jpg')
dot.engine = 'dot'

objDict = { }
for obj in objects:
    if '#IN' in obj['Properties'] and 'DESC' in obj['Properties']:
        room = obj['Properties']['#IN']
        desc = obj['Properties']['DESC'][0]
        if room in objDict:
            objDict[room] = objDict[room] + ',\n' + desc
        else:
            objDict[room] = 'contains: ' + desc
    
for room in rooms:
    name = room['Name']
    desc = room['Properties']['DESC'][0]
    objs = ''
    if name in objDict:
        objs = '\n' + objDict[name]
    dot.node(name, f"{desc}\n{name}{objs}", shape='box', style='filled')
    for direction, nextRoom in room['Exits'].items():
        if 'TO' in nextRoom:
            dot.edge(name, nextRoom['TO'], label=direction, tailport=direction.lower())


dot.render('zork1.gv', view=False)
